#!/bin/bash
# GitLab backup cleanup script  
# Removes backups older than {{ gitlab_backup_keep_time | int // 86400 }} days
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -e

BACKUP_DIR="/opt/gitlab-backups"
KEEP_DAYS={{ gitlab_backup_keep_time | int // 86400 }}
LOG_FILE="/var/log/gitlab-backup-cleanup.log"

echo "$(date): Starting GitLab backup cleanup..." >> "$LOG_FILE"
echo "$(date): Removing backups older than $KEEP_DAYS days from $BACKUP_DIR" >> "$LOG_FILE"

# Find and remove old backup files
DELETED_COUNT=0

if [ -d "$BACKUP_DIR" ]; then
    # Remove old GitLab backup files
    while IFS= read -r -d '' file; do
        echo "$(date): Removing old backup: $(basename "$file")" >> "$LOG_FILE"
        rm -f "$file"
        ((DELETED_COUNT++))
    done < <(find "$BACKUP_DIR" -name "gitlab_backup_*" -mtime +$KEEP_DAYS -type f -print0)
    
    # Remove old config backups
    while IFS= read -r -d '' file; do
        echo "$(date): Removing old config backup: $(basename "$file")" >> "$LOG_FILE"
        rm -f "$file"
        ((DELETED_COUNT++))
    done < <(find "$BACKUP_DIR" -name "gitlab_config_*" -mtime +$KEEP_DAYS -type f -print0)
    
    # Remove old compose backups
    while IFS= read -r -d '' file; do
        echo "$(date): Removing old compose backup: $(basename "$file")" >> "$LOG_FILE"
        rm -f "$file"
        ((DELETED_COUNT++))
    done < <(find "$BACKUP_DIR" -name "docker-compose_*" -mtime +$KEEP_DAYS -type f -print0)
    
    # Remove old environment backups
    while IFS= read -r -d '' file; do
        echo "$(date): Removing old env backup: $(basename "$file")" >> "$LOG_FILE"
        rm -f "$file"
        ((DELETED_COUNT++))
    done < <(find "$BACKUP_DIR" -name "env_*" -mtime +$KEEP_DAYS -type f -print0)
    
    # Remove old caddy config backups
    while IFS= read -r -d '' dir; do
        echo "$(date): Removing old caddy backup: $(basename "$dir")" >> "$LOG_FILE"
        rm -rf "$dir"
        ((DELETED_COUNT++))
    done < <(find "$BACKUP_DIR" -name "caddy_*" -mtime +$KEEP_DAYS -type d -print0)
    
    # Remove old manifests
    while IFS= read -r -d '' file; do
        echo "$(date): Removing old manifest: $(basename "$file")" >> "$LOG_FILE"
        rm -f "$file"
        ((DELETED_COUNT++))
    done < <(find "$BACKUP_DIR" -name "backup_manifest_*" -mtime +$KEEP_DAYS -type f -print0)
fi

# Report cleanup results
REMAINING_COUNT=$(find "$BACKUP_DIR" -name "gitlab_backup_*" -type f | wc -l)
BACKUP_SIZE=$(du -sh "$BACKUP_DIR" 2>/dev/null | cut -f1 || echo "0")

echo "$(date): Cleanup completed. Deleted $DELETED_COUNT old files." >> "$LOG_FILE"
echo "$(date): Remaining backups: $REMAINING_COUNT" >> "$LOG_FILE"
echo "$(date): Current backup directory size: $BACKUP_SIZE" >> "$LOG_FILE"