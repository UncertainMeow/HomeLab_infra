#!/bin/bash
# GitLab automated backup script
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -e

COMPOSE_DIR="{{ gitlab_compose_dir }}"
BACKUP_DIR="/opt/gitlab-backups"
DATE=$(date +%Y%m%d_%H%M%S)
LOG_FILE="/var/log/gitlab-backup.log"

# Ensure backup directory exists
mkdir -p "$BACKUP_DIR"

echo "$(date): Starting GitLab backup..." >> "$LOG_FILE"

cd "$COMPOSE_DIR"

# Create GitLab backup
echo "$(date): Creating GitLab database and repository backup..." >> "$LOG_FILE"
{{ docker_compose_cmd }} exec -T gitlab gitlab-backup create BACKUP=gitlab_backup_${DATE}

# Copy GitLab configuration
echo "$(date): Backing up GitLab configuration..." >> "$LOG_FILE" 
{{ docker_compose_cmd }} exec -T gitlab tar -czf /var/opt/gitlab/backups/gitlab_config_${DATE}.tar.gz -C /etc/gitlab .

# Copy backup files to backup directory
echo "$(date): Copying backup files..." >> "$LOG_FILE"
{{ docker_compose_cmd }} exec -T gitlab cp /var/opt/gitlab/backups/gitlab_backup_${DATE}_gitlab_backup.tar "$BACKUP_DIR/"
{{ docker_compose_cmd }} exec -T gitlab cp /var/opt/gitlab/backups/gitlab_config_${DATE}.tar.gz "$BACKUP_DIR/"

# Export Docker Compose configuration
echo "$(date): Backing up Docker Compose configuration..." >> "$LOG_FILE"
cp docker-compose.yml "$BACKUP_DIR/docker-compose_${DATE}.yml"
cp .env "$BACKUP_DIR/env_${DATE}.backup"
cp -r caddy "$BACKUP_DIR/caddy_${DATE}"

# Create backup manifest
echo "$(date): Creating backup manifest..." >> "$LOG_FILE"
cat > "$BACKUP_DIR/backup_manifest_${DATE}.txt" << EOF
GitLab Backup Manifest
=====================
Date: $(date)
Host: {{ ansible_hostname }}
GitLab External URL: {{ gitlab_external_url }}

Files in this backup:
- gitlab_backup_${DATE}_gitlab_backup.tar (GitLab data)
- gitlab_config_${DATE}.tar.gz (GitLab configuration) 
- docker-compose_${DATE}.yml (Docker Compose config)
- env_${DATE}.backup (Environment variables)
- caddy_${DATE}/ (Caddy configuration)

Restore Instructions:
1. Stop GitLab: {{ docker_compose_cmd }} down
2. Restore data: gitlab-backup restore BACKUP=gitlab_backup_${DATE}
3. Restore config: tar -xzf gitlab_config_${DATE}.tar.gz -C /etc/gitlab
4. Start services: {{ docker_compose_cmd }} up -d
EOF

# Calculate backup size
BACKUP_SIZE=$(du -sh "$BACKUP_DIR" | cut -f1)
echo "$(date): Backup completed successfully. Total size: $BACKUP_SIZE" >> "$LOG_FILE"

# Optional: Upload to remote storage (uncomment and configure as needed)
# rsync -av "$BACKUP_DIR/" user@backup-server:/backups/gitlab/

echo "$(date): GitLab backup process finished" >> "$LOG_FILE"